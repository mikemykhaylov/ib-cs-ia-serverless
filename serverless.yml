org: mmykhaylov
app: ib-cs-ia-serverless
service: ib-cyberpunk-barbershop
frameworkVersion: "2"
provider:
  name: aws
  runtime: nodejs14.x
  region: eu-central-1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:PutObject
            - s3:GetObject
            - s3:DeleteObject
          Resource: "arn:aws:s3:::ib-cyberpunk-barbershop-data/*"
        - Effect: Allow
          Action:
            - s3:ListBucket
          Resource: "arn:aws:s3:::ib-cyberpunk-barbershop-data"
  lambdaHashingVersion: 20201221
  apiGateway:
    shouldStartNameWithService: true
  tracing:
    lambda: true
functions:
  graphql:
    handler: src/index.graphql
    environment:
      DB: ${param:dbURL}
      CLIENT_ID: ${param:clientIDGraphQL}
      CLIENT_SECRET: ${param:clientSecretGraphQL}
    events:
      - http:
          path: graphql
          method: post
          cors: true
      - http:
          path: graphql
          method: get
          cors: true
  handleImageUpload:
    handler: src/index.handleImageUpload
    environment:
      CLIENT_ID: ${param:clientIDImageUpload}
      CLIENT_SECRET: ${param:clientSecretImageUpload}
    events:
      - s3:
          bucket: ib-cyberpunk-barbershop-data
          event: s3:ObjectCreated:*
          rules:
            - prefix: barberProfileImages/
custom:
  contentCompression: 1024
  webpack:
    includeModules: true
    forceExclude:
      - aws-sdk
    packager: yarn
plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-api-compression
